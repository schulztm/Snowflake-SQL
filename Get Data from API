import requests
import pandas
from pathlib import Path
from pprint import pprint

#API to generate mock data
#https://www.mockaroo.com/docs
api_key = "REDACTED"
api_endpoint = f"https://api.mockaroo.com/api/generate.json?key={api_key}&count=500"
schema = [
    {"name": "id", "type": "Row Number"},
    {"name": "first_name", "type": "First Name"},
    {"name": "last_name", "type": "Last Name"},
    {"name": "email", "type": "Email Address"},
]
response = requests.post(api_endpoint, json=schema)
data = response.json()

#Convert JSON output into a DataFrame, then perform basic cleaning
df = pandas.DataFrame(data)

df = df.drop(columns=['id']) #I'm pretending the ID is unnecessary for this example

df['name'] = df['first_name'] + ' ' + df['last_name'] #I'm pretending the first and last names should be merged
df = df.drop(columns=['first_name'])
df = df.drop(columns=['last_name'])

#Confirm max lengths for the VARCHAR in SQL
all_name_lengths = df['name'].str.len()
max_name_length = all_name_lengths.max()
print("Longest name length:", max_name_length)

all_email_lengths = df['email'].str.len()
max_email_length = all_email_lengths.max()
print("Longest email length:", max_email_length)


#Since I do not have access to this API in Snowflake, I will be saving it as a CSV file, then uploading
downloads_folder_path = Path.home() / "Downloads" / "mock_data.csv"
df.to_csv(downloads_folder_path, index=False)
